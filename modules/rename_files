#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Long;
use FindBin qw($Bin);
use lib "$FindBin::Bin/..";
use Clusterflow;


# Get Options
my $cores;
my $mem = '';;
my $result = GetOptions ("cores=i" => \$cores, "mem" => \$mem);

# QSUB SETUP
# --cores i = offered cores. Return number of required cores.
if($cores){
	print 1;
	exit;
}
# --mem. Return the required memory allocation.
if($mem){
	print '4G';
	exit;
}

# MODULE
# Read in the input files from the run file
my ($files_ref, $runfile, $job_id, $prev_job_id, $parameters) = Clusterflow::load_runfile_params(@ARGV);
my @files = @$files_ref;

open (RUN,'>>',$runfile) or die "Can't write to $runfile: $!";

# If we haven't been given any parameters to suffix the filename with, just return the filename
if(!defined $parameters || length($parameters) == 0){
	foreach(@files){
		print RUN "$job_id:$_\n";
	}
} else {
	foreach(@files){
		my $new_fn = $_.'_'.$parameters.".txt";
		rename $_, $new_fn or die "could not move file $_ to $new_fn";
		print RUN "$job_id\t$new_fn\n";
	}
}

close (RUN);